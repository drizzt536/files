FirstStringDifference[s1_String, s2_String] := Module[{i, n},
    n = Min[StringLength@ s1, StringLength@ s2];

    (* `Return` does not work inside of `Do` loops. *)
    For [ i = 1, i <= n, i++,
        If [ StringPart[s1, i] != StringPart[s2, i],
            Return@ i;
        ];
    ];

    If [ StringLength@ s1 == StringLength@ s2, -1, n + 1 ]
]

FirstStringDifference[s1_?NumberQ, s2_?NumberQ] :=
    FirstDecimalDifference[s1m s2]

FirstDecimalDifference[a_?NumberQ, b_?NumberQ] := Module[{s1, s2, i, n},
    FirstStringDifference[
        StringReplace[ToString[a], "." -> ""],
        StringReplace[ToString[b], "." -> ""]
    ]
]


(* SylvesterExpansionNextTerm[
    $Precision -> $PrecisionOption_Integer?Positive, (* should be a bit more than double the previous *)
    y -> yOption_?NumericQ /; Negative[yOption],
    terms -> termsOption : {___Integer?Negative}
] := -SylvesterExpansionNextTerm[<|$Precision -> $PrecisionOption, y -> -yOption, terms -> -termsOption |>] *)

SylvesterExpansionNextTerm[
    y -> yOption_?NumericQ /; Positive[yOption],
    $Precision -> $Precision_Integer?Positive, (* should be a bit more than double the previous *)
    terms -> termsOption : {___Integer?Positive}
] := Module[{
    n = 0,
    p = 0,
    y = SetPrecision[yOption, $Precision],
    terms = termsOption,
    GetApprox,
    list,
    digit
},
    GetApprox[x_?NumberQ] := baseValue + 1 / SetPrecision[x 10^p, $Precision];

    Print["Computing Sum of Known Terms:"];
    baseValue = Total[1 / SetPrecision[#, $Precision] & /@ terms];
    Print["\tdone"];

    Print["Finding Correct Power of 10:"];

        While [ True,
            If [ GetApprox[9] <= y,
                Break[];
            ];
            p++;
        ];

        Print["\tp == ", p];
        Print["\tdone"];

    Print["Finding Correct Digits:"];
    If [ n == 0,
        list = Table[GetApprox[n + i] > y, {i, 1, 9}] ~Append~ False;
        digit = FirstPosition[list, False][[1]] - 1;
        n = digit;

        If [ n == 0 && p > 0, (* 9 10^(p-1) < x < 10^p *) (* maybe this should be && p > 1? *)
            p -= 2; (* -1 to get to the right value, -1 for the second digit *)
            n = 99;
        ];

        Print["\t", n, "*^", p];
    ];

    While [ p > 0,
        n *= 10;
        p--;
        list = Table[GetApprox[n + i] > y, {i, 0, 9}] ~Append~ False;
        digit = FirstPosition[list, False][[1]] - 2;

        n += digit;

        If [ p ~Mod~ 10 == 0,
            Print["\t", n, "*^", p];
        ];
    ];

    Print["\tdone"];

    n++;

    (* `difference - 1` because there is usually a decimal point. *)
    With[{ digits = FirstDecimalDifference[GetApprox@ n, y] - 1 },
        Print[];
        Print["n = ", n];
        Print[digits, " digits of accuracy"];
        Return@ {n, digits};
        (* Return[n]; *)
    ];
]

SylvesterExpansionNextTerm[y -> E, $Precision -> 100, terms -> {1, 1, 2, 5, 55}]

list = {1, 1, 2, 5, 55};
Sum[IntegerLength[i], {i, list}]

Total[IntegerLength[#] & /@ list]
(* (* This at least works for Pi *)
IntegerLength[Subscript[term, n_Integer /; n > 0]] := Sum[
    IntegerLength[ Subscript[term, k] ],
    {k, n - 1}
] *)


SylvesterExpansionNextTerm[
    y -> Pi - 3,
    $Precision -> 9000, (* this is for the 13th number *)
    terms -> {
        (* these terms need to be put in manually *)
        (* d-prec == decimal precision *)
        (* +----+------+------+ *)
        (* |indx|d-prec|length| *)
        (* +----+------+------+ *)
        (* | 1  |    1 |    1 | *) 8,
        (* | 2  |    3 |    2 | *) 61,
        (* | 3  |    7 |    4 | *) 5020,
        (* | 4  |   17 |    9 | *) 128541455,
        (* | 5  |   34 |   18 | *) 162924332716605980,
        (* | 6  |   68 |   35 | *) 28783052231699298507846309644849796,
        (* | 7  |  137 |   69 | *) 871295615653899563300996782209332544845605756266650946342214549769447,
        (* | 8  |  275 |  138 | *) 910061501066771569929177518283776533536956708990096834567481804094469953756509557953741463718463021812584586928871816513428410989679108567,
        (* | 9  |  552 |  277 | *) 1519975995495123548864232057230913989322800465552709630913779900493650670821767027219702518074382949141691252249407810669110196772510918483421661269623000241540612237295778589839203838068946388167303612692018867252097220910799910121318313730089594877104929553610347363788990198,
        (* | 10 | 1108 |  553 | *) 3615455471582486000145649018223397099166826163683301789062540270509414959783556780836761642204519869354884239583194801387002048797969779091794868463185702594818005541857630128575946136035053165329955953027655941749295936491729557558509795623239994105636752198836270784061141719941852449881772325462303572255174255057672638567474967542491354471381176431978776054756233942285930200578166190648569473860832228026892389517758910739072052112180302512759973884762505528749693481612414819148862238401215750025609802645249507759302626955226055882048423169423343,
        (* | 11 | 2217 | 1109 | *) 44307489566534943680673245462504159770281187977643191015419371812634393000467171774383804593891321909064706907093777137161291151633698755098127790260131130447691904647429154709335414247960087137917104875600833337266623752183654599354324990490308332562223348390184611948219514918579489845234698365013397796478714854840642562972820230436312709375435435083574445573053724718588356666401116940513751151217306043649172632623786705270622659362235034562392258756013762402728647299194328632265606494795066906374034167576732264734123090031919070861358419549096834837454639370074304352060364101073076810631784982842723519925131360164706882689225079787446349554004080546731917789072805592046813543159135378307431306080876183415707726907097068958880259114829000271986605457522146630666278182645118473157779897822499164640972052019121154750598694064423247029865182042839418188632791961668626330412746830682144727497777944644616148776909032232648850690189590719183725223256749757437828732837682409265622910158923833325966358322458568736250159945534072134155301696017487287118261706993556548894936260406435592564464187488350,
        (* | 12 | 4438 | 2218 | *) 4367953236304177614190587090632605810582145948988604283642679589949526430347920830575085735420499485563741172858787864117559257618398463948391852107638413257285314116802502271585687535167978582358094765491727244580073091118890550484579423105860537546037483061718236660747620025755811157455826705006738833089488012273502342396962742192972059054147688390000792466147727784807844249515079730071805278405940726682359965642463776501681586703849377021345184716825458957841226986324309445986797677067408879247283235185541107949200602646956907493700108243425184370619508526202183710600603437919004396432139111987130829970865538316640465538995113439674256563705319807216408768264984805289585476782328644447993481091679251838344089515093466887137974811654387885784031612136704680376307813851749440433461169608360908522148256805912161126193099365067180196568125073354240205191839048078885148252326182079162697697796803574838898288453500424001661081391315124673184888792441059103474126250173801944166215016024937759021726502611627955005753827281954663481889983262632177271763972615514851131258404241451394881500490028038381163955241365577765817528192590728325200289650450277079342173239285129271778181331063430790363530755579541899027043256146353345841987111726152699431987243864037145485842076984277841641415664013221673720868708125520954667202380945617338767017236132892903202401012054226057501173915809587767496429354856736622051638588369969315189093811903189050278635491765321994732977139736331410121674927835574501516440335402475082161040440524648319495060259942319472676005796203252771637981834695514422047618968690686219727381163156954314555864628367953271500859086690430743194667122221813925017676648116160463263983032494237074607035328905903920114035490272584294775772153717780738706334441018068117396823791255276386410633471277541764575186785182639503782938134841503617220222442123063195981779012224255102596735458899499729505981225414304127116477971768309516772534671165404656900324587898911705631126217530260571047205168980244724741159587723924353157779229895236378288859046711737047998541778525619234824528543032208666398750292124781847458537653610881440242387138133944144917779365871276292867235683860840947998282964,
        (* | 13 | 8873 | 4436 | *) 88900561245556561349452773147372348984738264805625718520355056903153749536092116563257745274036128127716407706313609137228241694677622480468474296095314011407884951455245067334224272147893560355226611237681533397334393231861969102994056228548607316043624103727065658987551160718049873264543651242803196335655375617675432493962663007505715827144006868441265360202519235204455544717118991360826411989498293476565094107078114379741725298933424815477258390624256567272010105788663052220513854613144009067578415626535508321267339076678802374946706316721687140261410126710633824688595418211637887536125804159560811803200220733330268091719869844503462961459013900015286447666782433411832595380627341693676063413137099017784082072614887788852942583112795088720438488033816521725976288876175264532965383104573785318325188586027397957202631965709997808390610397435809087271922800377040686651552355034248643047741049339391374091827532943531088345721099113983672142623756368167764786202254316092533825904400772120948692463091255655861222139474392782928492877591359688772914184171430530269548661781511534047442878472372584903316960036621241174083765936786149142273355635493771076062161196385294766499276191679823866573627975276486211139733067672893123980040698673832350719538219851974840030384201671150985645191842744756658867163113328441480559089877402788452591239430265602170873124756523407647645950160109824391335901643532931880627253101151672652842789808107032563193875964399649883008571785223783258070743670098482034708498397611893377509172784854218314517703813944165352409770070385352764797276048197032148233863367709948527510995293715669580983336009704336803980207195013483957082908486037527179141474678955166171272036829251018561909632795958286184005631723037428271681013235408261115000622106023595696892535029850814882771479026624511309398320301199632099372767893611213078990377109060550087694679330505068929668903976016191346671136427161241530379743527757597229897870342499179205198141287937858804416908082459363999786886806412855609107223710845007572155521145199923011678915522393480322068884620712893395882057814037985194270283225301856727942717602213284828600168089207912151270172298702140409595412401265748074721720566838663237590903335296120014351953384397672617148158465275401902527446335864925684696968387314969545055999763155746878468458313212586187629329141309811856153954833660714284040507292194968051627883871231195475460872063781787882162979500577556187076093009721076430380791399041146914045340200237127724393620574015788306007002854327755713022378733491066822743608068029802402512798404726236857730036077060976109056406044334709682208837639586477881586711975339428596303741271830599040567028384928187590899591621156566039649940749173768015189338143362682516793020721854791509418787559419911904744853604267264976482171607459533813309330295821898391501114310203699504253278233611197167044187436229889420529440022673672268061588026719633427171478166530386570519484023372898586699889418679562747545404264013575969461100769410136279380153209555065892930275543409316447341563080526176133192647190369678142869490106016416408709117543557861931499436347188042882721889732908924101477579356574400207650077458467790136961276302794151347392308443652205958440148776514524428931700633249859048146167776096534701422214956544582270019905782282269750868487379094376624744422371011554939235327484367114042600540574141685645921681586698366610134289185271563162146499641970122594224088315861101757223914905994072446676167869035673117645109250235685505634619604906905276562741372128960649394614982982321396492320554837001710164577789427449102409780955882201916033262009240435305563507403874202631453723207577238774178286566006531872310779246247026385144749917422040847972283669502932331292442154172371458727764961954419343548395214854192757509399958271452080456927285497503791678287823230539509834241899153785844003981532098540908296259745588064172603762305138859135320055375700749103367513277766512458492032910100815080395032928541432629529459216630129505970569098210734010153587730520268060439665819684488767874116603213132788127393716301703395288828199093454062325564400667548995952402153336964334798851951420015124335170865408065762166753431055249421169678647601369809441215913007238657395622826889346181232678336569042441699800390909310164395456482389497447672914369371901597325460852087133718051653988095743517264536826021268256508285345763
        (* +----+------+------+ *)
        Nothing
    }
]


SylvesterExpansionNextTerm[y -> Pi - 3, $Precision -> 100, terms -> {8, 61, 5020}]

(* SylvesterExpansionNextTerm[
    y -> Pi,
    $Precision -> 1000,
    terms -> {
        1,
        (* 1, *)
        (* 1, *)
        (* 8, *)
        (* 61, *)
        (* 5020, *)
        (* 128541455, *)
        (* 162924332716605980, *)
        (* 28783052231699298507846309644849796, *)
        (* 871295615653899563300996782209332544845605756266650946342214549769447, *)
        (* 910061501066771569929177518283776533536956708990096834567481804094469953756509557953741463718463021812584586928871816513428410989679108567, *)
        (* 1519975995495123548864232057230913989322800465552709630913779900493650670821767027219702518074382949141691252249407810669110196772510918483421661269623000241540612237295778589839203838068946388167303612692018867252097220910799910121318313730089594877104929553610347363788990198, *)
        (* 3615455471582486000145649018223397099166826163683301789062540270509414959783556780836761642204519869354884239583194801387002048797969779091794868463185702594818005541857630128575946136035053165329955953027655941749295936491729557558509795623239994105636752198836270784061141719941852449881772325462303572255174255057672638567474967542491354471381176431978776054756233942285930200578166190648569473860832228026892389517758910739072052112180302512759973884762505528749693481612414819148862238401215750025609802645249507759302626955226055882048423169423343, *)
        (* 44307489566534943680673245462504159770281187977643191015419371812634393000467171774383804593891321909064706907093777137161291151633698755098127790260131130447691904647429154709335414247960087137917104875600833337266623752183654599354324990490308332562223348390184611948219514918579489845234698365013397796478714854840642562972820230436312709375435435083574445573053724718588356666401116940513751151217306043649172632623786705270622659362235034562392258756013762402728647299194328632265606494795066906374034167576732264734123090031919070861358419549096834837454639370074304352060364101073076810631784982842723519925131360164706882689225079787446349554004080546731917789072805592046813543159135378307431306080876183415707726907097068958880259114829000271986605457522146630666278182645118473157779897822499164640972052019121154750598694064423247029865182042839418188632791961668626330412746830682144727497777944644616148776909032232648850690189590719183725223256749757437828732837682409265622910158923833325966358322458568736250159945534072134155301696017487287118261706993556548894936260406435592564464187488350, *)
        Nothing
    }
] *)

