(G=>{var a=f=>{if(typeof f!="string")return"image/png";switch((f=f.toLowerCase()).startsWith("image/")&&(f=f.slice(6)),f){default:case"png":return"image/png";case"jpeg":case"jfif":case"jpg":return"image/jpeg";case"webp":return"image/webp"}},W=x=>x.getContext("2d"),Q=(a,b)=>a instanceof b,C=x=>document.createElement(x),A=i=>{let x=C("canvas");return x.width=i.naturalWidth,x.height=i.naturalHeight,W(x).drawImage(i,0,0),x},B=i=>{let x=C("canvas");return x.width=i.width,x.height=i.height,W(x).putImageData(i,0,0),x},b=o=>Q(o,Image)?A(o):Q(o,ImageData)?B(o):Q(o,HTMLCanvasElement)?o:(()=>{throw Error(`cannot synchronously convert from "${typeof o=="string"?"data URI":"unknown format"} to a canvas.`)})(),d=(o,f)=>typeof o=="string"?o:b(o).toDataURL(a(f)),e=(o,D,f)=>{let x=C("a");x.href=d(o,f);x.download=(D??"download")+"."+(f=="jpg"?f:a(f).slice(6));x.click()},f=(o,d)=>e(o,d,"png"),g=(o,d)=>e(o,d,"jpg"),h=(o,d)=>e(o,d,"webp"),E={download:e,downloadPNG:f,downloadJPG:g,downloadJPEG:g,downloadWEBP:h,convertToCanvas:b,convertToCanvasAsync:async o=>Q(o,Image)?A(o):Q(o,ImageData)?B(o):Q(o,HTMLCanvasElement)?o:typeof o=="string"?new Promise((t,f)=>{let i=C("image");i.onload=()=>t(A(i));i.onerror=()=>f(Error`URI source is probably invalid`);i.src=o}):(()=>{throw Error`cannot asynchronously convert from unknown format to a canvas.`})(),dataURI:d,_standardizeFormat:a};e.png=f,e.jpg=e.jpeg=g,e.webp=h,typeof module!="undefined"&&typeof exports=="object"?module.exports=E:globalThis.imageDownload=E})(true)
